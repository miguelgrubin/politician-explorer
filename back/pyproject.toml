[tool.poetry]
name = "back"
version = "0.1.0"
description = ""
authors = ["Miguel G. Rubin <miguelgr1988@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
elasticsearch = "^7.17.9"
pandas = "^2.0.1"
pydantic = "^1.10.7"
fastapi = "^0.95.1"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
python-multipart = "^0.0.6"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
pylint = "^2.17.2"
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
coverage = {extras = ["toml"], version = "^7.2.3"}
safety = "^2.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# https://github.com/pytest-dev/pytest/
asyncio_mode = "auto"
pythonpath = "src"
testpaths = "tests"
python_files = "test_*.py"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
# fail_under = 50
exclude_lines = [
"raise AssertionError",
"raise NotImplementedError",
"if __name__ == .__main__.:",
"@(abc\\.)?abstractmethod"
]
ignore_errors = true

[tool.black]
# https://github.com/psf/black
line-length = 100
target-version = ["py310"]

[tool.isort]
# https://github.com/timothycrosley/isort/
profile = "black"
src_paths = ["src", "tests"]
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
known_first_party = "tests,src"
known_third_party = "pydantic,fastapi,passlib,jose,elasticsearch,pandas,python-multipart"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
include_trailing_comma = true
default_section = "FIRSTPARTY"
multi_line_output = 3
indent = 4
force_grid_wrap = 0
use_parentheses = true
line_length = 100
force_alphabetical_sort_within_sections = true
